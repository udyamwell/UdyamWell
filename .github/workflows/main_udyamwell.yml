name: UdyamWell Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Clean frontend build directory
        run: rm -rf frontend/build

      - name: Set up Node.js version for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Install dependencies and build frontend
        run: |
          cd frontend
          npm install --legacy-peer-deps
          npm run build
      - name: Wait for build to finish
        run: sleep 100  # Adjust the delay time as needed

      - name: Create frontend artifact archive
        run: tar -czf frontend.tar.gz -C frontend/build .

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend.tar.gz

  # build-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Clean backend build directory
  #       run: rm -rf backend/build

  #     - name: Set up Node.js version for backend
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18.x'

  #     - name: Install backend dependencies
  #       run: npm install
        
  #     - name: Copy backend directory to temporary location
  #       run: cp -R . /tmp/backend

  #     - name: Wait for build to finish
  #       run: sleep 5m

  #     - name: Create backend artifact archive
  #       run: tar -czf backend.tar.gz --directory=/tmp/backend --exclude='./frontend' --exclude='./node_modules' .

  #     - name: Upload backend artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: backend-build
  #         path: backend.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend]  # build-backend
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-build

      # - name: Download backend artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: backend-build

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'udyamwell'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BCF900FDC023445BA307F22B8CE75D7F }}
